name: Build web image

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  Web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: go build -v
      working-directory: app

    - name: Test
      run: go test -v
      working-directory: app

    - name: Stage packaging area
      run: mkdir staging && mv app/open-dmr staging/ && cp deployment.dockerfile staging/deployment.dockerfile

    - name: Download artifact
      uses: dawidd6/action-download-artifact@v2
      with:
        # Optional, GitHub token, a Personal Access Token with `public_repo` scope if needed
        # Required, if artifact is from a different repo
        # Required, if repo is private a Personal Access Token with `repo` scope is needed
        # github_token: ${{secrets.GITHUB_TOKEN}}
        # Required, workflow file name or ID
        workflow: db.yml
        # Optional, the status or conclusion of a completed workflow to search for
        # Can be one of a workflow conclusion:
        #   "failure", "success", "neutral", "cancelled", "skipped", "timed_out", "action_required"
        # Or a workflow status:
        #   "completed", "in_progress", "queued"
        workflow_conclusion: success
        # Optional, will get head commit SHA
        # pr: ${{github.event.pull_request.number}}
        # Optional, no need to specify if PR is
        # commit: ${{github.event.pull_request.head.sha}}
        # Optional, will use the branch
        branch: master
        # Optional, defaults to all types
        # event: push
        # Optional, will use specified workflow run
        # run_id: 1122334455
        # Optional, run number from the workflow
        # run_number: 34
        # Optional, uploaded artifact name,
        # will download all artifacts if not specified
        # and extract them in respective subdirectories
        # https://github.com/actions/download-artifact#download-all-artifacts
        name: database
        # Optional, directory where to extract artifact. Defaults to the artifact name (see `name` input)
        path: staging/
        # Optional, defaults to current repo
        # repo: ${{github.repository}}
        # Optional, check the workflow run whether it has an artifact
        # then will get the last available artifact from previous workflow
        # default false, just try to download from the last one
        check_artifacts:  false
        # Optional, search for the last workflow run whose stored an artifact named as in `name` input
        # default false
        search_artifacts: false


    # - name: Log in to the Container registry
    #   uses: docker/login-action@v1
    #   with:
    #     registry: ${{ env.REGISTRY }}
    #     username: ${{ github.actor }}
    #     password: ${{ secrets.GITHUB_TOKEN }}

    # - name: Extract metadata (tags, labels) for Docker
    #   id: meta
    #   uses: docker/metadata-action@v3
    #   with:
    #     images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build, Push and Release a Docker container to Heroku.
      uses: gonuit/heroku-docker-deploy@v1.3.3
      with:
        email: ${{ secrets.HEROKU_EMAIL }}
        heroku_api_key: ${{ secrets.HEROKU_API_KEY }}
        heroku_app_name: ${{ secrets.HEROKU_APP_NAME }}

        dockerfile_directory: ./staging
        dockerfile_name: deployment.dockerfile
        process_type: web

    # - name: Build and push
    #   id: docker_build
    #   uses: docker/build-push-action@v2
    #   with:
    #     push: true
    #     context: staging/
    #     file: deployment.dockerfile
    #     tags: ${{ steps.meta.outputs.tags }}
    #     labels: ${{ steps.meta.outputs.labels }}