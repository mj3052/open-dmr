name: Build open-dmr

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - uses: actions/cache@v2
      with:
        path: |
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Build
      run: go build -v
      working-directory: app

    - name: Test
      run: go test -v
      working-directory: app

    - name: Stage packaging area
      run: mkdir staging && mv app/open-dmr staging/

    # - name: Download data (temp snippet)
    #   run: mv app/test_data/snippet.xml.zip ./data.zip

    - name: Install data deps
      run: sudo apt -y install aria2 lftp

    - name: Download data (full)
      run: ./download_data.sh

    - name: Load data into DB
      run: ./open-dmr -load ../data.zip
      working-directory: staging


    - name: Log in to the Container registry
      uses: docker/login-action@v1
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata (tags, labels) for Docker
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: staging/
        file: deployment.dockerfile
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}

    - name: DB Artifact
      uses: actions/upload-artifact@v2
      with:
        name: database
        path: staging/database